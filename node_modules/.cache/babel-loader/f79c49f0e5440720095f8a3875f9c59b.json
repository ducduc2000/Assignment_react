{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-basic-PT14312\\\\react-basic-PT14312\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport CateRequest from './api/categoriesApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]); // list product\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // list cate\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await CateRequest.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // Delete sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //delete danh mục\n\n\n  const onHandleDelete = async id => {\n    try {\n      const {\n        data\n      } = await CateRequest.removecate(id);\n      const newCategories = categories.filter(categori => categori.id !== id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Add sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //add danh mục\n\n\n  const onHandleAddCate = async category => {\n    try {\n      const {\n        data\n      } = await CateRequest.createcate(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //edit sản phẩm\n\n\n  const onHandleUpdate = async updateProducts => {\n    const newProducts = products.map(Products => Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  }; //edit danh mục\n\n\n  const onHandleUpdateCate = async updateCategories => {\n    const newProducts = categories.map(Categories => Categories.id === updateCategories.id ? updateCategories : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await CateRequest.updatecate(updateCategories.id, updateCategories);\n    setProducts(newCategories);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    categories: categories,\n    onDelete: onHandleDelete,\n    onAddCate: onHandleAddCate,\n    onUpdateCate: onHandleUpdateCate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/react-basic-PT14312/react-basic-PT14312/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","CateRequest","App","products","setProducts","categories","setCategories","getProducts","data","getAll","error","console","log","getCategories","onHandleRemove","id","remove","newProducts","filter","product","onHandleDelete","removecate","newCategories","categori","onHandleAdd","create","onHandleAddCate","category","createcate","onHandleUpdate","updateProducts","map","Products","update","onHandleUpdateCate","updateCategories","Categories","updatecate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers'\nimport apiRequest from './api/productApi'\nimport CateRequest from './api/categoriesApi'\n\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  // list product\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n  // list cate\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await CateRequest.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n  }, []);\n  // Delete sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiRequest.remove(id);\n      const newProducts = products.filter((product) => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  //delete danh mục\n  const onHandleDelete = async (id) => {\n    try {\n      const { data } = await CateRequest.removecate(id);\n      const newCategories = categories.filter((categori) => categori.id !== id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Add sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  //add danh mục\n  const onHandleAddCate = async (category) => {\n    try {\n      const { data } = await CateRequest.createcate(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  //edit sản phẩm\n  const onHandleUpdate = async (updateProducts) => {\n    const newProducts = products.map(\n      (Products) =>\n        Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  };\n  //edit danh mục\n  const onHandleUpdateCate = async (updateCategories) => {\n    const newProducts = categories.map(\n      (Categories) =>\n        Categories.id === updateCategories.id ? updateCategories : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await CateRequest.updatecate(updateCategories.id, updateCategories);\n    setProducts(newCategories);\n  };\n  return (\n    <div className=\"App\">\n      <Routers \n      products={products}  \n      onRemove={onHandleRemove} \n      onAdd={onHandleAdd} \n      onUpdate={onHandleUpdate}\n      categories={categories}\n      onDelete={onHandleDelete}\n      onAddCate={onHandleAddCate}\n      onUpdateCate={onHandleUpdateCate}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}