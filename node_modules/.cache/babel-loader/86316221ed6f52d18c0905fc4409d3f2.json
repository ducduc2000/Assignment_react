{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-basic-PT14312\\\\react-basic-PT14312\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\nimport CateRequest from './api/categoriesApi';\nimport PostRequest from './api/postsApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [posts, setPosts] = useState([]); // list product\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // list cate\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await CateRequest.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []); // list post\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const {\n          data\n        } = await PostRequest.getAll();\n        setPosts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getPosts();\n  }, []); // Delete sản phẩm\n\n  const onHandleRemove = async id => {\n    try {\n      const {\n        data\n      } = await apiRequest.remove(id);\n      const newProducts = products.filter(product => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //delete danh mục\n\n\n  const onHandleDelete = async id => {\n    try {\n      const {\n        data\n      } = await CateRequest.removecate(id);\n      const newCategories = categories.filter(categori => categori.id !== id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Delete bài viết\n\n\n  const onHandleRemovepost = async id => {\n    try {\n      const {\n        data\n      } = await PostRequest.removepost(id);\n      const newPosts = posts.filter(post => post.id !== id);\n      setPosts(newPosts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; // Add sản phẩm\n\n\n  const onHandleAdd = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //add danh mục\n\n\n  const onHandleAddCate = async category => {\n    try {\n      const {\n        data\n      } = await CateRequest.createcate(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  }; //edit sản phẩm\n\n\n  const onHandleUpdate = async updateProducts => {\n    const newProducts = products.map(Products => Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  }; //edit danh mục\n\n\n  const onHandleUpdateCate = async updateCategories => {\n    const newCategories = categories.map(Categories => Categories.id === updateCategories.id ? updateCategories : Categories // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const {\n      data\n    } = await CateRequest.updatecate(updateCategories.id, updateCategories);\n    setCategories(newCategories);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemove: onHandleRemove,\n    onAdd: onHandleAdd,\n    onUpdate: onHandleUpdate,\n    categories: categories,\n    onDelete: onHandleDelete,\n    onAddCate: onHandleAddCate,\n    onUpdateCate: onHandleUpdateCate,\n    posts: posts,\n    onRemovepost: onHandleRemovepost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/react-basic-PT14312/react-basic-PT14312/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","CateRequest","PostRequest","App","products","setProducts","categories","setCategories","posts","setPosts","getProducts","data","getAll","error","console","log","getCategories","getPosts","onHandleRemove","id","remove","newProducts","filter","product","onHandleDelete","removecate","newCategories","categori","onHandleRemovepost","removepost","newPosts","post","onHandleAdd","create","onHandleAddCate","category","createcate","onHandleUpdate","updateProducts","map","Products","update","onHandleUpdateCate","updateCategories","Categories","updatecate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers'\nimport apiRequest from './api/productApi'\nimport CateRequest from './api/categoriesApi'\nimport PostRequest from './api/postsApi'\n\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [posts, setPosts] = useState([]);\n  // list product\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n  // list cate\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const { data } = await CateRequest.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getCategories();\n  }, []);\n  // list post\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const { data } = await PostRequest.getAll();\n        setPosts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getPosts();\n  }, []);\n  // Delete sản phẩm\n  const onHandleRemove = async (id) => {\n    try {\n      const { data } = await apiRequest.remove(id);\n      const newProducts = products.filter((product) => product.id !== id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  //delete danh mục\n  const onHandleDelete = async (id) => {\n    try {\n      const { data } = await CateRequest.removecate(id);\n      const newCategories = categories.filter((categori) => categori.id !== id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n   // Delete bài viết\n   const onHandleRemovepost = async (id) => {\n    try {\n      const { data } = await PostRequest.removepost(id);\n      const newPosts = posts.filter((post) => post.id !== id);\n      setPosts(newPosts);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  // Add sản phẩm\n  const onHandleAdd = async (product) => {\n    try {\n      const { data } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  //add danh mục\n  const onHandleAddCate = async (category) => {\n    try {\n      const { data } = await CateRequest.createcate(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log(\"failed to request API: \", error);\n    }\n  };\n  //edit sản phẩm\n  const onHandleUpdate = async (updateProducts) => {\n    const newProducts = products.map(\n      (Products) =>\n        Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await apiRequest.update(updateProducts.id, updateProducts);\n    setProducts(newProducts);\n  };\n  //edit danh mục\n  const onHandleUpdateCate = async (updateCategories) => {\n    const newCategories = categories.map(\n      (Categories) =>\n        Categories.id === updateCategories.id ? updateCategories : Categories // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    const { data } = await CateRequest.updatecate(updateCategories.id, updateCategories);\n    setCategories(newCategories);\n  };\n  return (\n    <div className=\"App\">\n      <Routers \n      products={products}  \n      onRemove={onHandleRemove} \n      onAdd={onHandleAdd} \n      onUpdate={onHandleUpdate}\n      categories={categories}\n      onDelete={onHandleDelete}\n      onAddCate={onHandleAddCate}\n      onUpdateCate={onHandleUpdateCate}\n      posts={posts}\n      onRemovepost={onHandleRemovepost}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}