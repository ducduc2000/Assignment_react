{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-basic-PT14312\\\\react-basic-PT14312\\\\src\\\\pages\\\\views\\\\Admin\\\\EditPosts\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport Swal from 'sweetalert2';\n\nconst EditPosts = ({\n  posts,\n  onUpdatePost\n}) => {\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  let post = posts.find(data => data.id == id);\n  const [currentPost, setCurrentPost] = useState(post);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onHandleSubmit = e => {\n    Swal.fire('Updated!', 'Your file has been updated.', 'success');\n    onUpdatePost(currentPost);\n    history.push(\"/admin/posts\");\n  };\n\n  const onHandleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentPost({ ...currentPost,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Ti\\xEAu \\u0111\\u1EC1\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    defaultValue: currentPost.title,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }), errors.title && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 38\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"M\\xF4 t\\u1EA3 ng\\u1EAFn\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"short\",\n    defaultValue: currentPost.short,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), errors.short_desc && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 43\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"productName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"M\\xF4 t\\u1EA3 d\\xE0i\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"content\",\n    defaultValue: currentPost.content,\n    onChange: onHandleChange,\n    className: \"form-control\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), errors.desc_post && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 42\n    }\n  }, \"T\\xEAn s\\u1EA3n ph\\u1EA9m kh\\xF4ng \\u0111\\u01B0\\u1EE3c \\u0111\\u1EC3 tr\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"C\\u1EADp nh\\u1EADt\")));\n};\n\nEditPosts.propTypes = {};\nexport default EditPosts;","map":{"version":3,"sources":["E:/react-basic-PT14312/react-basic-PT14312/src/pages/views/Admin/EditPosts/index.js"],"names":["React","useState","PropTypes","useParams","useHistory","useForm","Swal","EditPosts","posts","onUpdatePost","id","history","post","find","data","currentPost","setCurrentPost","register","handleSubmit","errors","onHandleSubmit","e","fire","push","onHandleChange","name","value","target","title","required","color","short","short_desc","content","desc_post","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst EditPosts = ({ posts, onUpdatePost }) => {\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    let post = posts.find((data) => data.id == id);\r\n    const [currentPost, setCurrentPost] = useState(post);\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onHandleSubmit = (e) => {\r\n        Swal.fire(\r\n            'Updated!',\r\n            'Your file has been updated.',\r\n            'success'\r\n        )\r\n        onUpdatePost(currentPost);\r\n        history.push(\"/admin/posts\");\r\n    };\r\n    const onHandleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setCurrentPost({\r\n            ...currentPost,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={handleSubmit(onHandleSubmit)} className=\"w-100\" >\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">Tiêu đề</label>\r\n                    <input type=\"text\" name=\"title\" defaultValue={currentPost.title} onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                    {errors.title && <span style={{ color: \"red\" }}>Tên sản phẩm không được để trống</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">Mô tả ngắn</label>\r\n                    <textarea type=\"text\" name=\"short\" defaultValue={currentPost.short} onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                    {errors.short_desc && <span style={{ color: \"red\" }}>Tên sản phẩm không được để trống</span>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productName\">Mô tả dài</label>\r\n                    <textarea type=\"text\" name=\"content\" defaultValue={currentPost.content} onChange={onHandleChange} className=\"form-control\" ref={register({ required: true })} />\r\n                    {errors.desc_post && <span style={{ color: \"red\" }}>Tên sản phẩm không được để trống</span>}\r\n                </div>\r\n                <button className=\"btn btn-primary\">Cập nhật</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nEditPosts.propTypes = {\r\n\r\n}\r\n\r\nexport default EditPosts"]},"metadata":{},"sourceType":"module"}