{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-basic-PT14312\\\\react-basic-PT14312\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]); // list product\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []); // // Delete\n  // const onHandleRemove = async (id) => {\n  //   try {\n  //     const { data } = await apiRequest.remove(id);\n  //     const newProducts = products.filter((product) => product.id !== id);\n  //     setProducts(newProducts);\n  //   } catch (error) {\n  //     console.log(\"failed to request API: \", error);\n  //   }\n  // };\n  // // Add sản phẩm\n  // const onHandleAdd = async (product) => {\n  //   try {\n  //     const { data } = await apiRequest.create(product);\n  //     setProducts([...products, data]);\n  //   } catch (error) {\n  //     console.log(\"failed to request API: \", error);\n  //   }\n  // };\n  // const onHandleUpdate = async (updateProducts) => {\n  //   const newProducts = products.map(\n  //     (Products) =>\n  //       Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n  //   );\n  //   const { data } = await apiRequest.update(updateProducts.id, updateProducts);\n  //   setProducts(newProducts);\n  // };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/react-basic-PT14312/react-basic-PT14312/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","App","products","setProducts","getProducts","data","getAll","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CAFa,CAGb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAML,UAAU,CAACM,MAAX,EAAvB;AACAH,QAAAA,WAAW,CAACE,IAAD,CAAX;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAH,IAAAA,WAAW;AACZ,GAVQ,EAUN,EAVM,CAAT,CAJa,CAgBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEF,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAMD;;AACD,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Routers from './routers'\nimport apiRequest from './api/productApi'\n\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  // list product\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const { data } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('failed to request API: ', error)\n      }\n    }\n    getProducts();\n  }, []);\n\n  // // Delete\n  // const onHandleRemove = async (id) => {\n  //   try {\n  //     const { data } = await apiRequest.remove(id);\n  //     const newProducts = products.filter((product) => product.id !== id);\n  //     setProducts(newProducts);\n  //   } catch (error) {\n  //     console.log(\"failed to request API: \", error);\n  //   }\n  // };\n  // // Add sản phẩm\n  // const onHandleAdd = async (product) => {\n  //   try {\n  //     const { data } = await apiRequest.create(product);\n  //     setProducts([...products, data]);\n  //   } catch (error) {\n  //     console.log(\"failed to request API: \", error);\n  //   }\n  // };\n  // const onHandleUpdate = async (updateProducts) => {\n  //   const newProducts = products.map(\n  //     (Products) =>\n  //       Products.id === updateProducts.id ? updateProducts : Products // Nếu Products.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n  //   );\n  //   const { data } = await apiRequest.update(updateProducts.id, updateProducts);\n  //   setProducts(newProducts);\n  // };\n\n  return (\n    <div className=\"App\">\n      <Routers products={products} />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}